Locks sind einer der wichtigsten Grundbausteine für die parallele Programmierung. Trotzdem gibt es kaum Lock-Implementierungen für verteilten Speicher, dafür aber eine Vielzahl an Lock-Algorithmen für gemeinsamen Speicher, die NUMA berücksichtigen. Genau wie bei verteiltem Speicher sind bei NUMA Zugriffe auf entfernten Speicher deutlich langsamer und müssen vermieden werden. Daher wird in dieser Arbeit eine Auswahl solcher Algorithmen auf verteilten Speicher portiert und dort optimiert. Für die Evaluation wird eine Benchmarksuite entwickelt, mit der die Geschwindigkeit, die praktische Fairness und andere algorithmusspezifische Kennzahlen von beliebigen Lock-Implementierungen auf verteiltem Speicher in verschiedenen Szenarien gemessen werden kann. Die Evaluation zeigt, dass durch Portierung und Optimierung eines Cohort-Locks mit globalem MCS-Lock und lokalem Hemlock eine Implementierung entwickelt wurde, die bis zu vier Mal so schnell ist wie der bisher beste Lock auf verteiltem Speicher, der RMA-MCS-Lock. Dabei hat die neue Implementierung einen geringeren Speicherverbrauch und bietet vergleichbare Fairness.
